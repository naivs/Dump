package gui;

import data.Customer;
import engine.MyTableModel;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.Locale;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JTextField;
import javax.swing.KeyStroke;
import javax.swing.UIManager;

public class OkCancelDialog extends javax.swing.JDialog {

    /**
     * A return status code - returned if Cancel button has been pressed
     */
    public static final int RET_CANCEL = 0;
    /**
     * A return status code - returned if OK button has been pressed
     */
    public static final int RET_OK = 1;

    public static final int ADD_MODE = 0;
    public static final int EDIT_MODE = 1;
    private int currentSelectionIndex;
    private final int mode;
    private final MyTableModel tableModel;

    public OkCancelDialog(java.awt.Frame parent, MyTableModel tableModel, final int mode) {
        super(parent, true);
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        this.tableModel = tableModel;
        currentSelectionIndex = tableModel.getCurrentSelection();
        this.mode = mode;

        if (mode == ADD_MODE) {
            nameTextField.setForeground(Color.GRAY);
            surnameTextField.setForeground(Color.GRAY);
            emailTextField.setForeground(Color.GRAY);
            itpTextField.setForeground(Color.GRAY);
            productTextField.setForeground(Color.GRAY);
            solutionTextArea.setForeground(Color.GRAY);
            problemTextArea.setForeground(Color.GRAY);
        } else {
            nameTextField.setText(tableModel.getCustomer(currentSelectionIndex).getName());
            surnameTextField.setText(tableModel.getCustomer(currentSelectionIndex).getSurname());
            emailTextField.setText(tableModel.getCustomer(currentSelectionIndex).getEmail());
            itpTextField.setText(String.valueOf(tableModel.getCustomer(currentSelectionIndex).getCompanyId()));
            productTextField.setText(tableModel.getCustomer(currentSelectionIndex).getProduct());
            solutionTextArea.setText(tableModel.getCustomer(currentSelectionIndex).getSolution());
            problemTextArea.setText(tableModel.getCustomer(currentSelectionIndex).getProblem());
        }

        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                doClose(RET_CANCEL);
            }
        });
    }

//    public OkCancelDialog(java.awt.Frame parent, MyTableModel tableModel, final int MODE, int indexRow) {
//        this(parent, tableModel, MODE);
//
//        
//
//        this.indexRow = indexRow;
//        this.setVisible(true);
//    }
    private void onOK() {
        tableModel.addElement(new Customer(System.currentTimeMillis(),
                nameTextField.getText(),
                surnameTextField.getText(),
                emailTextField.getText(),
                Integer.parseInt(itpTextField.getText()),
                productTextField.getText(),
                problemTextArea.getText(),
                solutionTextArea.getText(),
                false));
        System.out.println("Record add successful...");
        dispose();
    }

    private void onEdit() {
        tableModel.getCustomer(currentSelectionIndex).setName(nameTextField.getText());
        tableModel.getCustomer(currentSelectionIndex).setSurname(surnameTextField.getText());
        tableModel.getCustomer(currentSelectionIndex).setEmail(emailTextField.getText());
        tableModel.getCustomer(currentSelectionIndex).setCompanyId(Integer.parseInt(itpTextField.getText()));
        tableModel.getCustomer(currentSelectionIndex).setProduct(productTextField.getText());
        tableModel.getCustomer(currentSelectionIndex).setProblem(problemTextArea.getText());
        tableModel.getCustomer(currentSelectionIndex).setSolution(solutionTextArea.getText());

        System.out.println("Record #" + (currentSelectionIndex + 1) + " changed successful...");
        dispose();
    }

    /**
     * @return the return status of this dialog - one of RET_OK or RET_CANCEL
     */
    public int getReturnStatus() {
        return returnStatus;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        nameTextField = new javax.swing.JTextField();
        surnameTextField = new javax.swing.JTextField();
        emailTextField = new javax.swing.JTextField();
        itpTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        problemTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        solutionTextArea = new javax.swing.JTextArea();
        productTextField = new javax.swing.JTextField();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        okButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/okButton.png"))); // NOI18N
        okButton.setToolTipText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/cancelButton.png"))); // NOI18N
        cancelButton.setToolTipText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        nameTextField.setText("name");
        nameTextField.setToolTipText("");
        nameTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nameTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameTextFieldFocusLost(evt);
            }
        });

        surnameTextField.setText("surname");
        surnameTextField.setToolTipText("");
        surnameTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                surnameTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                surnameTextFieldFocusLost(evt);
            }
        });

        emailTextField.setText("email");
        emailTextField.setToolTipText("");
        emailTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                emailTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                emailTextFieldFocusLost(evt);
            }
        });

        itpTextField.setText("itp id");
        itpTextField.setToolTipText("");
        itpTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                itpTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                itpTextFieldFocusLost(evt);
            }
        });

        problemTextArea.setColumns(1);
        problemTextArea.setLineWrap(true);
        problemTextArea.setRows(1);
        problemTextArea.setText("problem");
        problemTextArea.setToolTipText("");
        problemTextArea.setWrapStyleWord(true);
        problemTextArea.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                problemTextAreaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                problemTextAreaFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(problemTextArea);

        solutionTextArea.setColumns(20);
        solutionTextArea.setLineWrap(true);
        solutionTextArea.setRows(1);
        solutionTextArea.setText("solution");
        solutionTextArea.setWrapStyleWord(true);
        solutionTextArea.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                solutionTextAreaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                solutionTextAreaFocusLost(evt);
            }
        });
        jScrollPane2.setViewportView(solutionTextArea);

        productTextField.setText("product");
        productTextField.setToolTipText("");
        productTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                productTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                productTextFieldFocusLost(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(emailTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(itpTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(productTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, 0)
                                        .addComponent(cancelButton))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(nameTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(surnameTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(1, 1, 1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, okButton});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jScrollPane1, jScrollPane2, productTextField});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(surnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itpTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(productTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton)))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jScrollPane1, jScrollPane2});

        getRootPane().setDefaultButton(okButton);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        if (mode == ADD_MODE) {
            onOK(); // добавить новую
        }
        if (mode == EDIT_MODE) {
            onEdit(); // изменить и сохранить
        }        //doClose(RET_OK);
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

    private void nameTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameTextFieldFocusGained
        if (nameTextField.getForeground().equals(Color.GRAY)) {
            nameTextField.setText("");
            nameTextField.setForeground(UIManager.getDefaults().getColor(JTextField.getDefaultLocale(), Locale.US));
        }
    }//GEN-LAST:event_nameTextFieldFocusGained

    private void nameTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameTextFieldFocusLost
        if (nameTextField.getText().equals("")) {
            nameTextField.setText("name");
            nameTextField.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_nameTextFieldFocusLost

    private void surnameTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_surnameTextFieldFocusGained
        if (surnameTextField.getForeground().equals(Color.GRAY)) {
            surnameTextField.setText("");
            surnameTextField.setForeground(UIManager.getDefaults().getColor(JTextField.getDefaultLocale(), Locale.US));
        }
    }//GEN-LAST:event_surnameTextFieldFocusGained

    private void surnameTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_surnameTextFieldFocusLost
        if (surnameTextField.getText().equals("")) {
            surnameTextField.setText("surname");
            surnameTextField.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_surnameTextFieldFocusLost

    private void emailTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailTextFieldFocusGained
        if (emailTextField.getForeground().equals(Color.GRAY)) {
            emailTextField.setText("");
            emailTextField.setForeground(UIManager.getDefaults().getColor(JTextField.getDefaultLocale(), Locale.US));
        }
    }//GEN-LAST:event_emailTextFieldFocusGained

    private void emailTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailTextFieldFocusLost
        if (emailTextField.getText().equals("")) {
            emailTextField.setText("email");
            emailTextField.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_emailTextFieldFocusLost

    private void itpTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_itpTextFieldFocusGained
        if (itpTextField.getForeground().equals(Color.GRAY)) {
            itpTextField.setText("");
            itpTextField.setForeground(UIManager.getDefaults().getColor(JTextField.getDefaultLocale(), Locale.US));
        }
    }//GEN-LAST:event_itpTextFieldFocusGained

    private void itpTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_itpTextFieldFocusLost
        if (itpTextField.getText().equals("")) {
            itpTextField.setText("itp id");
            itpTextField.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_itpTextFieldFocusLost

    private void productTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_productTextFieldFocusGained
        if (productTextField.getForeground().equals(Color.GRAY)) {
            productTextField.setText("");
            productTextField.setForeground(UIManager.getDefaults().getColor(JTextField.getDefaultLocale(), Locale.US));
        }
    }//GEN-LAST:event_productTextFieldFocusGained

    private void productTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_productTextFieldFocusLost
        if (productTextField.getText().equals("")) {
            productTextField.setText("product");
            productTextField.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_productTextFieldFocusLost

    private void problemTextAreaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_problemTextAreaFocusGained
        if (problemTextArea.getForeground().equals(Color.GRAY)) {
            problemTextArea.setText("");
            problemTextArea.setForeground(UIManager.getDefaults().getColor(JTextField.getDefaultLocale(), Locale.US));
        }
    }//GEN-LAST:event_problemTextAreaFocusGained

    private void problemTextAreaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_problemTextAreaFocusLost
        if (problemTextArea.getText().equals("")) {
            problemTextArea.setText("problem");
            problemTextArea.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_problemTextAreaFocusLost

    private void solutionTextAreaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_solutionTextAreaFocusGained
        if (solutionTextArea.getForeground().equals(Color.GRAY)) {
            solutionTextArea.setText("");
            solutionTextArea.setForeground(UIManager.getDefaults().getColor(JTextField.getDefaultLocale(), Locale.US));
        }
    }//GEN-LAST:event_solutionTextAreaFocusGained

    private void solutionTextAreaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_solutionTextAreaFocusLost
        if (solutionTextArea.getText().equals("")) {
            solutionTextArea.setText("solution");
            solutionTextArea.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_solutionTextAreaFocusLost

    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(OkCancelDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(OkCancelDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(OkCancelDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(OkCancelDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                OkCancelDialog dialog = new OkCancelDialog(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JTextField itpTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JButton okButton;
    private javax.swing.JTextArea problemTextArea;
    private javax.swing.JTextField productTextField;
    private javax.swing.JTextArea solutionTextArea;
    private javax.swing.JTextField surnameTextField;
    // End of variables declaration//GEN-END:variables

    private int returnStatus = RET_CANCEL;
}
