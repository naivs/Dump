import java.awt.AWTException;
import java.awt.Robot;
import jssc.SerialPortEvent;
import jssc.SerialPortEventListener;
import jssc.SerialPortException;

/**
 *
 * @author ivan
 */
public class GUI extends javax.swing.JFrame {
    
    private final KeyMapManager keyMapManager;
    private int[][] currentKeyMap;
    private static final int[] CODE = {
        1,
        2,
        4,
        8,
        16,
        32,
        64,
        128,
        256,
        512,
        1024,
        2048
    };
    private static Robot robot;
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        try {
            robot = new Robot();
        } catch (AWTException e) {
            System.err.println("Can't create robot.\n" + e.getMessage());
        }
        keyMapManager = new KeyMapManager();
        currentKeyMap = keyMapManager.getLayout("Default");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new Display();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sega controls");
        setResizable(false);

        jPanel1.setFocusable(false);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "      ---", "ttyUSB0", "ttyUSB1", "ttyUSB2", "ttyUSB3", "ttyUSB4", "ttyUSB5", "ttyUSB6", "ttyUSB7", "ttyUSB8", "ttyUSB9", "ttyUSB10" }));
        jComboBox1.setFocusable(false);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton1.setText("Set keys");
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(777, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(332, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if (jComboBox1.getSelectedIndex() != 0) {
            try {
                COMConnection connection = new COMConnection("/dev/" + jComboBox1.getSelectedItem());
                connection.addEventListener(new SerialPortEventListener() {
                    String buf;
                    String[] raw;
                    int code_1, code_2;
                    int i;

                    @Override
                    public void serialEvent(SerialPortEvent serialPortEvent) {
                        try {
                            if ((buf = connection.readString()) != null) {
                                if (buf.contains(" ")) {
                                    raw = buf.split(" ");

                                    code_1 = raw[0].isEmpty() ? 0 : Integer.parseInt(raw[0]);
                                    code_2 = raw[1].isEmpty() ? 0 : Integer.parseInt(raw[1].trim());

                                    for (i = 0; i < CODE.length; i++) {
                                        if ((code_1 & CODE[i]) == CODE[i]) {
                                            robot.keyPress(currentKeyMap[i][0]);
                                            System.out.println("Joy 1: press-" + currentKeyMap[i][0]);
                                            ((Display) jPanel1).press(0, i);
                                        } else if (((Display) jPanel1).isPressed(0, i)) {
                                            robot.keyRelease(currentKeyMap[i][0]);
                                            System.out.println("Joy 1: release-" + currentKeyMap[i][0]);
                                            ((Display) jPanel1).release(0, i);
                                        }

                                        if ((code_2 & CODE[i]) == CODE[i]) {
                                            robot.keyPress(currentKeyMap[i][1]);
                                            System.out.println("Joy 2: press-" + currentKeyMap[i][1]);
                                            ((Display) jPanel1).press(1, i);
                                        } else if (((Display) jPanel1).isPressed(1, i)) {
                                            robot.keyRelease(currentKeyMap[i][1]);
                                            System.out.println("Joy 2: release-" + currentKeyMap[i][1]);
                                            ((Display) jPanel1).release(1, i);
                                        }
                                    }
                                    jPanel1.repaint();
                                }
                            }
                        } catch (NumberFormatException ex) {
                            System.out.println(ex);
                        } catch (SerialPortException ex) {
                            System.out.println(ex);
                        }
                    }
                });

            } catch (SerialPortException ex) {
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        KeyConfigurator keyConfigurator = new KeyConfigurator(this, currentKeyMap);
        keyConfigurator.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new GUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
